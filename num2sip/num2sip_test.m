function num2sip_test()
% Test function for NUM2SIP.
%
% (c) 2011-2020 Stephen Cobeldick
%
% See Also TESTFUN NUM2SIP SIP2NUM NUM2BIP BIP2NUM

fun = @num2sip;
chk = testfun(fun);
%
%% Help Examples %%
%
chk(1000, fun, '1 k')
chk(10000,              fun, '10 k')
chk(1e4,                fun, '10 k')
chk(10000,4,true,       fun, '10 kilo')
chk(10000,4,false,true, fun, '10.00 k')
chk(999,3, fun, '999 ')
chk(999,2, fun, '1 k')
chk(0.5e6,        fun, '500 k')
chk(0.5e6,[],'M', fun, '0.5 M')
chk(200e6,[],true, fun, '200 mega') % watt
chk(1234567890,8,true, fun, '1.2345679 giga') % hertz
chk(sip2num('9 T'), fun, '9 T') % 9 tera
%
%% Edge Cases %%
%
chk(0, fun, '0 ')
chk(NaN, fun, 'NaN ')
chk(+Inf, fun, 'Inf ')
chk(-Inf, fun, '-Inf ')
%
%% Rounding %%
%
% order <= 0
chk(0.999999e-3,1,[],true, fun, '1 m')
chk(0.999999e-3,2,[],true, fun, '1.0 m')
chk(0.999999e-3,3,[],true, fun, '1.00 m')
chk(0.999999e-3,4,[],true, fun, '1.000 m')
chk(0.999999e-3,5,[],true, fun, '1.0000 m')
chk(0.999999e-3,6,[],true, fun, '999.999 µ')
chk(0.999999e-3,7,[],true, fun, '999.9990 µ')
chk(0.999999e-3,8,[],true, fun, '999.99900 µ')
chk(0.999999e-3,9,[],true, fun, '999.999000 µ')
chk(0.999999e-2,1,[],true, fun, '10 m')
chk(0.999999e-2,2,[],true, fun, '10 m')
chk(0.999999e-2,3,[],true, fun, '10.0 m')
chk(0.999999e-2,4,[],true, fun, '10.00 m')
chk(0.999999e-2,5,[],true, fun, '10.000 m')
chk(0.999999e-2,6,[],true, fun, '9.99999 m')
chk(0.999999e-2,7,[],true, fun, '9.999990 m')
chk(0.999999e-2,8,[],true, fun, '9.9999900 m')
chk(0.999999e-2,9,[],true, fun, '9.99999000 m')
chk(0.999999e-1,1,[],true, fun, '100 m')
chk(0.999999e-1,2,[],true, fun, '100 m')
chk(0.999999e-1,3,[],true, fun, '100 m')
chk(0.999999e-1,4,[],true, fun, '100.0 m')
chk(0.999999e-1,5,[],true, fun, '100.00 m')
chk(0.999999e-1,6,[],true, fun, '99.9999 m')
chk(0.999999e-1,7,[],true, fun, '99.99990 m')
chk(0.999999e-1,8,[],true, fun, '99.999900 m')
chk(0.999999e-1,9,[],true, fun, '99.9999000 m')
chk(0.999999e-0,1,[],true, fun, '1 ')
chk(0.999999e-0,2,[],true, fun, '1.0 ')
chk(0.999999e-0,3,[],true, fun, '1.00 ')
chk(0.999999e-0,4,[],true, fun, '1.000 ')
chk(0.999999e-0,5,[],true, fun, '1.0000 ')
chk(0.999999e-0,6,[],true, fun, '999.999 m')
chk(0.999999e-0,7,[],true, fun, '999.9990 m')
chk(0.999999e-0,8,[],true, fun, '999.99900 m')
chk(0.999999e-0,9,[],true, fun, '999.999000 m')
% order == 0
chk(0.999999e+1,1,[],true, fun, '10 ')
chk(0.999999e+1,2,[],true, fun, '10 ')
chk(0.999999e+1,3,[],true, fun, '10.0 ')
chk(0.999999e+1,4,[],true, fun, '10.00 ')
chk(0.999999e+1,5,[],true, fun, '10.000 ')
chk(0.999999e+1,6,[],true, fun, '9.99999 ')
chk(0.999999e+1,7,[],true, fun, '9.999990 ')
chk(0.999999e+1,8,[],true, fun, '9.9999900 ')
chk(0.999999e+1,9,[],true, fun, '9.99999000 ')
chk(0.999999e+2,1,[],true, fun, '100 ')
chk(0.999999e+2,2,[],true, fun, '100 ')
chk(0.999999e+2,3,[],true, fun, '100 ')
chk(0.999999e+2,4,[],true, fun, '100.0 ')
chk(0.999999e+2,5,[],true, fun, '100.00 ')
chk(0.999999e+2,6,[],true, fun, '99.9999 ')
chk(0.999999e+2,7,[],true, fun, '99.99990 ')
chk(0.999999e+2,8,[],true, fun, '99.999900 ')
chk(0.999999e+2,9,[],true, fun, '99.9999000 ')
% order >= 0
chk(0.999999e+3,1,[],true, fun, '1 k')
chk(0.999999e+3,2,[],true, fun, '1.0 k')
chk(0.999999e+3,3,[],true, fun, '1.00 k')
chk(0.999999e+3,4,[],true, fun, '1.000 k')
chk(0.999999e+3,5,[],true, fun, '1.0000 k')
chk(0.999999e+3,6,[],true, fun, '999.999 ')
chk(0.999999e+3,7,[],true, fun, '999.9990 ')
chk(0.999999e+3,8,[],true, fun, '999.99900 ')
chk(0.999999e+3,9,[],true, fun, '999.999000 ')
chk(0.999999e+4,1,[],true, fun, '10 k')
chk(0.999999e+4,2,[],true, fun, '10 k')
chk(0.999999e+4,3,[],true, fun, '10.0 k')
chk(0.999999e+4,4,[],true, fun, '10.00 k')
chk(0.999999e+4,5,[],true, fun, '10.000 k')
chk(0.999999e+4,6,[],true, fun, '9.99999 k')
chk(0.999999e+4,7,[],true, fun, '9.999990 k')
chk(0.999999e+4,8,[],true, fun, '9.9999900 k')
chk(0.999999e+4,9,[],true, fun, '9.99999000 k')
chk(0.999999e+5,1,[],true, fun, '100 k')
chk(0.999999e+5,2,[],true, fun, '100 k')
chk(0.999999e+5,3,[],true, fun, '100 k')
chk(0.999999e+5,4,[],true, fun, '100.0 k')
chk(0.999999e+5,5,[],true, fun, '100.00 k')
chk(0.999999e+5,6,[],true, fun, '99.9999 k')
chk(0.999999e+5,7,[],true, fun, '99.99990 k')
chk(0.999999e+5,8,[],true, fun, '99.999900 k')
chk(0.999999e+5,9,[],true, fun, '99.9999000 k')
chk(0.999999e+6,1,[],true, fun, '1 M')
chk(0.999999e+6,2,[],true, fun, '1.0 M')
chk(0.999999e+6,3,[],true, fun, '1.00 M')
chk(0.999999e+6,4,[],true, fun, '1.000 M')
chk(0.999999e+6,5,[],true, fun, '1.0000 M')
chk(0.999999e+6,6,[],true, fun, '999.999 k')
chk(0.999999e+6,7,[],true, fun, '999.9990 k')
chk(0.999999e+6,8,[],true, fun, '999.99900 k')
chk(0.999999e+6,9,[],true, fun, '999.999000 k')
%
%% One Less Than %%
%
% 1000^2 == 1e6
chk(1e6-1,1, fun, '1 M')
chk(1e6-1,2, fun, '1 M')
chk(1e6-1,3, fun, '1 M')
chk(1e6-1,4, fun, '1 M')
chk(1e6-1,5, fun, '1 M')
chk(1e6-1,6, fun, '999.999 k')
chk(1e6-1,7, fun, '999.999 k')
chk(1e6-1,8, fun, '999.999 k')
chk(1e6-1,9, fun, '999.999 k')
chk(1e7-1,1, fun, '10 M')
chk(1e7-1,2, fun, '10 M')
chk(1e7-1,3, fun, '10 M')
chk(1e7-1,4, fun, '10 M')
chk(1e7-1,5, fun, '10 M')
chk(1e7-1,6, fun, '10 M')
chk(1e7-1,7, fun, '9.999999 M')
chk(1e7-1,8, fun, '9.999999 M')
chk(1e7-1,9, fun, '9.999999 M')
chk(1e8-1,1, fun, '100 M')
chk(1e8-1,2, fun, '100 M')
chk(1e8-1,3, fun, '100 M')
chk(1e8-1,4, fun, '100 M')
chk(1e8-1,5, fun, '100 M')
chk(1e8-1,6, fun, '100 M')
chk(1e8-1,7, fun, '100 M')
chk(1e8-1,8, fun, '99.999999 M')
chk(1e8-1,9, fun, '99.999999 M')
% 1000^3 == 1e9
chk(1e9-1,1, fun, '1 G')
chk(1e9-1,2, fun, '1 G')
chk(1e9-1,3, fun, '1 G')
chk(1e9-1,4, fun, '1 G')
chk(1e9-1,5, fun, '1 G')
chk(1e9-1,6, fun, '1 G')
chk(1e9-1,7, fun, '1 G')
chk(1e9-1,8, fun, '1 G')
chk(1e9-1,9, fun, '999.999999 M')
chk(1e10-1, 1, fun, '10 G')
chk(1e10-1, 2, fun, '10 G')
chk(1e10-1, 3, fun, '10 G')
chk(1e10-1, 4, fun, '10 G')
chk(1e10-1, 5, fun, '10 G')
chk(1e10-1, 6, fun, '10 G')
chk(1e10-1, 7, fun, '10 G')
chk(1e10-1, 8, fun, '10 G')
chk(1e10-1, 9, fun, '10 G')
chk(1e10-1,10, fun, '9.999999999 G')
%
%% Negative %%
%
chk(-1,     fun, '-1 ')
chk(-999,   fun, '-999 ')
chk(-999,1, fun, '-1 k')
chk(-999,2, fun, '-1 k')
chk(-999,      6, fun, '-999 ')
chk(-999.9,    6, fun, '-999.9 ')
chk(-999.99,   6, fun, '-999.99 ')
chk(-999.999,  6, fun, '-999.999 ')
chk(-999.9999, 6, fun, '-1 k')
chk(-999.99999,6, fun, '-1 k')
chk(-1e-6, fun, '-1 µ')
chk(-1e-3, fun, '-1 m')
chk(-1e+3, fun, '-1 k')
chk(-1e+6, fun, '-1 M')
%
%% Significant Figures %%
%
chk(999.999,1, fun, '1 k')
chk(999.999,2, fun, '1 k')
chk(999.999,3, fun, '1 k')
chk(999.999,4, fun, '1 k')
chk(999.999,5, fun, '1 k')
chk(999.999,6, fun, '999.999 ')
chk(999.999,7, fun, '999.999 ')
chk(999.999,8, fun, '999.999 ')
chk(999.999,9, fun, '999.999 ')
%
%% All Prefixes %%
%
chk(1e-24, fun, '1 y')
chk(1e-21, fun, '1 z')
chk(1e-18, fun, '1 a')
chk(1e-15, fun, '1 f')
chk(1e-12, fun, '1 p')
chk(1e-9 , fun, '1 n')
chk(1e-6 , fun, '1 µ')
chk(1e-3 , fun, '1 m')
chk(1e-0 , fun, '1 ')
chk(1e+0 , fun, '1 ')
chk(1e+3 , fun, '1 k')
chk(1e+6 , fun, '1 M')
chk(1e+9 , fun, '1 G')
chk(1e+12, fun, '1 T')
chk(1e+15, fun, '1 P')
chk(1e+18, fun, '1 E')
chk(1e+21, fun, '1 Z')
chk(1e+24, fun, '1 Y')
%
%% No Prefixes %%
%
chk(0.9e27,         6, fun, '900 Y')
chk(0.99e27,        6, fun, '990 Y')
chk(0.999e27,       6, fun, '999 Y')
chk(0.9999e27,      6, fun, '999.9 Y')
chk(0.99999e27,     6, fun, '999.99 Y')
chk(0.999999e27,    6, fun, '999.999 Y')
chk(0.9999999e27,   6, fun, '1e+27 ')
chk(0.99999999e27,  6, fun, '1e+27 ')
chk(0.999999999e27, 6, fun, '1e+27 ')
chk(0.9999999999e27,6, fun, '1e+27 ')
chk(0.9999999e27,1,[],true, fun, '1e+27 ')
chk(0.9999999e27,2,[],true, fun, '1.0e+27 ')
chk(0.9999999e27,3,[],true, fun, '1.00e+27 ')
chk(0.9999999e27,4,[],true, fun, '1.000e+27 ')
chk(0.9999999e27,5,[],true, fun, '1.0000e+27 ')
chk(0.9999999e27,6,[],true, fun, '1.00000e+27 ')
chk(0.9999999e27,7,[],true, fun, '999.9999 Y')
chk(0.9999999e27,8,[],true, fun, '999.99990 Y')
chk(0.9999999e27,9,[],true, fun, '999.999900 Y' )
chk(0.9e-24,       6, fun, '9e-25 ')
chk(0.99e-24,      6, fun, '9.9e-25 ')
chk(0.999e-24,     6, fun, '9.99e-25 ')
chk(0.9999e-24,    6, fun, '9.999e-25 ')
chk(0.99999e-24,   6, fun, '9.9999e-25 ')
chk(0.999999e-24,  6, fun, '9.99999e-25 ')
chk(0.9999999e-24, 6, fun, '1 y')
chk(0.99999999e-24,6, fun, '1 y')
chk(0.9e-24,         6,[],true, fun, '9.00000e-25 ')
chk(0.99e-24,        6,[],true, fun, '9.90000e-25 ')
chk(0.999e-24,       6,[],true, fun, '9.99000e-25 ')
chk(0.9999e-24,      6,[],true, fun, '9.99900e-25 ')
chk(0.99999e-24,     6,[],true, fun, '9.99990e-25 ')
chk(0.999999e-24,    6,[],true, fun, '9.99999e-25 ')
chk(0.9999999e-24,   6,[],true, fun, '1.00000 y')
chk(0.99999999e-24,  6,[],true, fun, '1.00000 y')
chk(0.999999999e-24, 6,[],true, fun, '1.00000 y')
chk(0.9999999999e-24,6,[],true, fun, '1.00000 y')
%
%% Fixed Prefix %%
%
chk(999.999,1,'', fun, '1000 ')
chk(999.999,2,'', fun, '1000 ')
chk(999.999,3,'', fun, '1000 ')
chk(999.999,4,'', fun, '1000 ')
chk(999.999,5,'', fun, '1000 ')
chk(999.999,6,'', fun, '999.999 ')
chk(999.999,7,'', fun, '999.999 ')
chk(999.999,8,'', fun, '999.999 ')
chk(999.999,9,'', fun, '999.999 ')
chk(999,1,'k',true, fun, '1 k')
chk(999,2,'k',true, fun, '1.0 k')
chk(999,3,'k',true, fun, '0.999 k')
chk(999,4,'k',true, fun, '0.9990 k')
chk(999,5,'k',true, fun, '0.99900 k')
chk(999,1,'k',      fun, '1 k')
chk(999,2,'k',      fun, '1 k')
chk(999,3,'k',      fun, '0.999 k')
chk(999,4,'k',      fun, '0.999 k')
chk(999,5,'k',      fun, '0.999 k')
%
%% Trailing Zeros %%
%
chk(999.999,1,'',true, fun, '1000 ')
chk(999.999,2,'',true, fun, '1000 ')
chk(999.999,3,'',true, fun, '1000 ')
chk(999.999,4,'',true, fun, '1000 ')
chk(999.999,5,'',true, fun, '1000.0 ')
chk(999.999,6,'',true, fun, '999.999 ')
chk(999.999,7,'',true, fun, '999.9990 ')
chk(999.999,8,'',true, fun, '999.99900 ')
chk(999.999,9,'',true, fun, '999.999000 ')
chk(999,1,[],true, fun, '1 k')
chk(999,2,[],true, fun, '1.0 k')
chk(999,3,[],true, fun, '999 ')
chk(999,4,[],true, fun, '999.0 ')
chk(999,5,[],true, fun, '999.00 ')
chk(999,6,[],true, fun, '999.000 ')
%
%% https://en.wikipedia.org/wiki/Metric_prefix %%
%
chk(25e-6, fun, '25 µ')
chk(5.01e-3, fun, '5.01 m')
chk(3e6, fun, '3 M')
%
%% http://problemsphysics.com/formulas/prefixes.html %%
%
chk(2e-24, fun, '2 y')
chk(5e-21, fun, '5 z')
chk(4e-18, fun, '4 a')
chk(5e-15, fun, '5 f')
chk(7e-12, fun, '7 p')
chk(5e-9,  fun, '5 n')
chk(6e-6,  fun, '6 µ')
chk(5e-3,  fun, '5 m')
chk(1.6e3, fun, '1.6 k')
chk(19e6,  fun, '19 M')
chk(3e9,   fun, '3 G')
chk(2e12,  fun, '2 T')
chk(11e15, fun, '11 P') % source is inconsistent
chk(4e18,  fun, '4 E')
chk(12e21, fun, '12 Z')
chk(21e24, fun, '21 Y')
%
%% https://si-prefix.readthedocs.io/en/latest/ %%
%
chk(1e-27,       3, false, true, fun, '1.00e-27 ')
chk(1.764e-24,   3, fun, '1.76 y')
chk(7.4088e-23,  4, fun, '74.09 y')
chk(3.1117e-21,  3, fun, '3.11 z')
chk(1.30691e-19, 5, fun, '130.69 z')
chk(5.48903e-18, 3, fun, '5.49 a')
chk(2.30539e-16, 5, fun, '230.54 a')
chk(9.68265e-15, 3, fun, '9.68 f')
chk(4.06671e-13, 5, fun, '406.67 f')
chk(1.70802e-11, 4, fun, '17.08 p')
chk(7.17368e-10, 5, fun, '717.37 p')
chk(3.01295e-08, 4, fun, '30.13 n')
chk(1.26544e-06, 3, fun, '1.27 µ')
chk(5.31484e-05, 4, fun, '53.15 µ')
chk(0.00223223,  3, fun, '2.23 m')
chk(0.0937537,   4, fun, '93.75 m')
chk(3.93766,     3, fun, '3.94 ')
chk(165.382,     5, fun, '165.38 ')
chk(6946.03,     3, fun, '6.95 k')
chk(291733,      5, fun, '291.73 k')
chk(1.22528e+07, 4, fun, '12.25 M')
chk(5.14617e+08, 5, fun, '514.62 M')
chk(2.16139e+10, 4, fun, '21.61 G')
chk(9.07785e+11, 5, fun, '907.79 G') % source: '907.78 G' 
chk(3.8127e+13,  4, fun, '38.13 T')
chk(1.60133e+15, 3, false, true, fun, '1.60 P')
chk(6.7256e+16,  4, fun, '67.26 P')
chk(2.82475e+18, 3, fun, '2.82 E')
chk(1.1864e+20,  5, fun, '118.64 E')
chk(4.98286e+21, 3, fun, '4.98 Z')
chk(2.0928e+23,  5, fun, '209.28 Z')
chk(8.78977e+24, 3, fun, '8.79 Y')
chk(3.6917e+26,  5, fun, '369.17 Y')
chk(1.55051e+28, 4, fun, '1.551e+28 ')  % source: '15.51e+27 ' 
chk(6.51216e+29, 5, fun, '6.5122e+29 ') % source: '651.22e+27 '
%
%% Display Results %%
%
chk()
%
end
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%num2sip_test